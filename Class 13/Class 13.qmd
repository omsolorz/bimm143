---
title: "Class 13"
author: "Olivia Solorzano Alvarez"
format: pdf
editor: visual
---



```{r}
metaFile <- "GSE37704_metadata.csv"
countFile <- "GSE37704_featurecounts.csv"

```

```{r}
# Import metadata and take a peak
colData = read.csv(metaFile, row.names=1)
head(colData)

```
```{r}
# Import countdata
countData = read.csv(countFile, row.names=1)
head(countData)

countData <- as.matrix(countData[,-1])
nrow(countData)
```



```{r}
# Filter count data where you have 0 read count across all samples.

zeroCountData <- rowSums(countData) > 0
head(zeroCountData)
```

```{r}
newcounts <- countData[zeroCountData,]
head(countData)
```

```{r}
nrow(newcounts)
```

**DESeq

```{r}
library(DESeq2)

dds = DESeqDataSetFromMatrix(countData= newcounts,
                             colData= colData,
                             design= ~condition)
dds = DESeq(dds)
```

```{r}
dds
```


```{r}
dds <- DESeq(dds)
```

```{r}
res <- results(dds)
```

```{r}
res = results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
```

Volcano plot
```{r}
plot( res$log2FoldChange, -log(res$padj) )

# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (abs(res$padj) < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```



```{r}
summary(res)
```


## Anotate results 

I need to add annotation to my results including gene symvols and entrez ids etc.

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)

res$symbol = mapIds(org.Hs.eg.db,
                    keys= row.names(res), 
                    keytype="ENSEMBL",
                    column= "SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys= row.names(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype= "ENSEMBL",
                    column= "GENENAME",
                    multiVals="first")

head(res, 10)
```

```{r}
res = res[order(res$pvalue),]
write.csv(res, file="deseq_results.csv")
```

**Section 2: Pathway Analysis

```{r}
library(pathview)
library(gage)
library(gageData)
```

```{r}
data(kegg.sets.hs)
data(sigmet.idx.hs)
```


```{r}
# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```



```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

Gage pathway analysis
```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
attributes(keggres)
```

```{r}
# Look at the first few down (less) pathways
head(keggres$less)
```


```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```

![HSA04110](hsa04110.pathview.png)



