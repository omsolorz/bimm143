---
title: "Class06"
format: html
editor: visual
---

Example input vectors to start with 
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)

You can use the `mean()` function to calculate the average of grades for students.
```{r}
mean(student1)
```

We need to get rid of NA values to run function.
```{r}
mean(student2, is.na=TRUE)
```

#what about student 3?
```{r}
mean(student3, na.rm=TRUE)
```


We an replace the missed assignment NA values with a score of zero.
Find where the NA values are.
```{r}
student2
is.na(student2)
```

```{r}
student2[ is.na(student2) ]
```

```{r}
is.na(student2)
which(is.na(student2))
```

I can now make these values be anything I want

```{r}
student2[ is.na(student2) ] <- 0
student2
mean(student2)
```



It is time to work with new temp object (that I will call`x`) so I don't screw up my original objects.

```{r}
x <- student3
x[is.na(x)] <- 0
x
mean(x)
```

Finally, we can drop the lowest score before calculating the mean. This is equivalent to allowing the student to drop their worst assignment score. I can use the minus sign together with `which.min()` to exclude the lowest value: 
```{r}
z <- student1
z
which.min(z)
z[ - which.min(z)]
```


Now I need to put this all back together to make our working snippet: 
```{r}

z <- student3

#Map/Replace NA values to zero
z [ is.na(z) ]  <- 0 
#Exclude the lowest score
z [ -which.min(z)]
# Calculate the mean
mean(z[ -which.min(z)] )


```
 




